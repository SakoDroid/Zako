/* Zako server Main configuration file for Host (since 1.4)
**
** This file contains general configurations for each host.
*/
{
  "Name" : "def",
  "Port" : 80,
  /*
  ** Servers reaction to this host name. There are 5 options in the Reaction object."Handle" means
  ** how Zako should handle the requests for this host name. Three values can be used:
  ** 1. "Handle" : Means that the requests should be handled by the server itself. In this case
  ** "Target" option should be left empty but the other three should be filled or
  ** default value will be used.
  ** 2. "Forward" : Means that the resquests should be forwarded to another ip. In this case
  ** "Target" options must be filled with the address. Web server will act as a proxy.
  ** 3. "Redirect" : Server will redirect all the requests to this host to a new address
  ** indicated in the "Target" option.
  ** "RootDir", "CGIDir" and "TempFileUploadDir" are the directories that server will
  ** work with them. "default" value can be used for each of them.
  */
  "Reaction" : {
    "Handle" : "Handle",
    "Target" : "",
    "RootDir" : "/var/www/html",
    "CGIDir" : "/var/www/cgi-bin",
    "TempFileUploadDir" : "/var/www/files"
  }
  
  /*
  ** Sets the Zako view counter tool to on (true) or of (false).
  ** If this tool is enabled, the statistics of each host name is saved in views.json file in the
  ** root directory of the related host name.
  ** "View update frequency" is the pause between each time the views.json is updated. (milli
  ** seconds)
  */
  "View counter" : true,
  "View update frequency" : 500,

  /*
  ** Configs the server to send back Connection: keep-alive (true) or Connection: close (false)
  ** header.
  */
  "Keep Alive" : true,

  
  /*
  ** Sockets time out in milli seconds. If keep alive is one, this option is ignored
  ** and sockets will have no time out.
  */
  "Sockets-Timeout" : 5000,
  
  /*
  ** SSL configurations.
  ** Note that jks path should be absolute and both jks path an jks pass should be type String.
  */
  "SSL" : {
    "ON" : false,
    "jks path" : null,
    "jks pass" : null
  },
  
  /*
  ** In built CAPTCHA generator engine configurations.
  ** CAPTCHA length sets the length of captcha phrase.
  ** CAPTCHA hardness sets the hardness of the captcha picture. If its higher than 8, then the
  ** captcha pictures might become unreadable.
  ** CGA (CAPTCHA GET API) is the api that sends you the CAPTCHA picture back and CPA (CAPTCHA POST
  ** API) is the api that checks the answer.
  ** For random length, set the length to 0.
  ** UCS stands for Upper Case Sensitivity.
  */
  "CAPTCHA" : {
    "ON" : true,
    "CAPTCHA length" : 5,
    "CAPTCHA hardness" : 5,
    "CGA" : "/getcp",
    "CPA" : "/chkcp",
    "UCS" : false
  },

  /*
  ** This sections is related to allowable sizes for a Http request.
  ** All sizes are in in Megabytes.
  ** If you do not want to specify a size, set the value to null.
  */
  "Sizes" : {
    "Post body" : null,
    "File size" : null
  },

  /*
  ** This is related configurations for handling different scripts. (Host should be type String and
  ** port should be type Number)
  */
  "Scripts" : {
    ".php" : {
      "handle mode" : "CGI",
      "FCGI" : {
        "Host" : null,
        "Port" : null
      }
    },
    ".py" : {
      "handle mode" : "CGI",
      "FCGI" : {
        "Host" : null,
        "Port" : null
      }
    },
    ".cgi" : {
      "handle mode" : "CGI",
      "FCGI" : {
        "Host" : null,
        "Port" : null
      }
    },
    ".pl" : {
      "handle mode" : "CGI",
      "FCGI" : {
        "Host" : null,
        "Port" : null
      }
    },
    ".js" : {
      "handle mode" : "CGI",
      "FCGI" : {
        "Host" : null,
        "Port" : null
      }
    }
  },

  /*
  ** Fast CGI configurations.
  */
  "FCGI" : {
    "Params" : {
    }
  },
  
  /*
  ** Http authentication configs. Add the patterns that need authentication in the "Need" list.
  ** Users and passwords should be added in passwd file.
  ** Strings that go in "Need" array should be regex patterns, since server will match them with
  ** paths that will be requested by client.
  ** If you wish to set Digest as the authentication mechanism, then the algorithm should be
  ** specified as "mechanism algorithm". (Ex : "Digest MD5")
  */
  "HTTP AUTH" :{
    "ON" : true,
    "Auth mechanism" : "Basic",
    "Auth realm" : "Access to the staging site",
    "Need" : [
    ]
  }
}
